// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlXRootD.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<XrdCl::ResponseHandler> : std::false_type { };
  template<> struct DefaultConstructible<XrdCl::ResponseHandler> : std::false_type { };
}

// Class generating the wrapper for type XrdCl::ResponseHandler
// signature to use in the veto file: XrdCl::ResponseHandler
struct JlXrdCl_ResponseHandler: public Wrapper {

  JlXrdCl_ResponseHandler(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type XrdCl::ResponseHandler (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClXRootDResponses.hh:1125:9
    jlcxx::TypeWrapper<XrdCl::ResponseHandler>  t = jlModule.add_type<XrdCl::ResponseHandler>("XrdCl!ResponseHandler");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<XrdCl::ResponseHandler>>(new jlcxx::TypeWrapper<XrdCl::ResponseHandler>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void XrdCl::ResponseHandler::HandleResponseWithHosts(XrdCl::XRootDStatus *, XrdCl::AnyObject *, XrdCl::HostList *) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::ResponseHandler::HandleResponseWithHosts(XrdCl::XRootDStatus *, XrdCl::AnyObject *, XrdCl::HostList *)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClXRootDResponses.hh:1139:20
    t.method("HandleResponseWithHosts", static_cast<void (XrdCl::ResponseHandler::*)(XrdCl::XRootDStatus *, XrdCl::AnyObject *, XrdCl::HostList *) >(&XrdCl::ResponseHandler::HandleResponseWithHosts));

    DEBUG_MSG("Adding wrapper for void XrdCl::ResponseHandler::HandleResponse(XrdCl::XRootDStatus *, XrdCl::AnyObject *) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::ResponseHandler::HandleResponse(XrdCl::XRootDStatus *, XrdCl::AnyObject *)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClXRootDResponses.hh:1155:20
    t.method("HandleResponse", static_cast<void (XrdCl::ResponseHandler::*)(XrdCl::XRootDStatus *, XrdCl::AnyObject *) >(&XrdCl::ResponseHandler::HandleResponse));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<XrdCl::ResponseHandler>> type_;
};
std::shared_ptr<Wrapper> newJlXrdCl_ResponseHandler(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlXrdCl_ResponseHandler(module));
}
