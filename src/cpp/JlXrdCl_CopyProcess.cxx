// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlXRootD.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<XrdCl::CopyProcess> : std::false_type { };
  template<> struct DefaultConstructible<XrdCl::CopyProcess> : std::false_type { };
}

// Class generating the wrapper for type XrdCl::CopyProcess
// signature to use in the veto file: XrdCl::CopyProcess
struct JlXrdCl_CopyProcess: public Wrapper {

  JlXrdCl_CopyProcess(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type XrdCl::CopyProcess (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClCopyProcess.hh:107:9
    jlcxx::TypeWrapper<XrdCl::CopyProcess>  t = jlModule.add_type<XrdCl::CopyProcess>("XrdCl!CopyProcess");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<XrdCl::CopyProcess>>(new jlcxx::TypeWrapper<XrdCl::CopyProcess>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for XrdCl::XRootDStatus XrdCl::CopyProcess::AddJob(const XrdCl::PropertyList &, XrdCl::PropertyList *) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::XRootDStatus XrdCl::CopyProcess::AddJob(const XrdCl::PropertyList &, XrdCl::PropertyList *)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClCopyProcess.hh:167:20
    t.method("AddJob", static_cast<XrdCl::XRootDStatus (XrdCl::CopyProcess::*)(const XrdCl::PropertyList &, XrdCl::PropertyList *) >(&XrdCl::CopyProcess::AddJob));

    DEBUG_MSG("Adding wrapper for XrdCl::XRootDStatus XrdCl::CopyProcess::Prepare() (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::XRootDStatus XrdCl::CopyProcess::Prepare()
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClCopyProcess.hh:173:20
    t.method("Prepare", static_cast<XrdCl::XRootDStatus (XrdCl::CopyProcess::*)() >(&XrdCl::CopyProcess::Prepare));

    DEBUG_MSG("Adding wrapper for XrdCl::XRootDStatus XrdCl::CopyProcess::Run(XrdCl::CopyProgressHandler *) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::XRootDStatus XrdCl::CopyProcess::Run(XrdCl::CopyProgressHandler *)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClCopyProcess.hh:178:20
    t.method("Run", static_cast<XrdCl::XRootDStatus (XrdCl::CopyProcess::*)(XrdCl::CopyProgressHandler *) >(&XrdCl::CopyProcess::Run));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<XrdCl::CopyProcess>> type_;
};
std::shared_ptr<Wrapper> newJlXrdCl_CopyProcess(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlXrdCl_CopyProcess(module));
}
