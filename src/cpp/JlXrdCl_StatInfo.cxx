// this file was auto-generated by wrapit 5168a24
#include "Wrapper.h"

#include "jlXRootD.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<XrdCl::StatInfo> : std::false_type { };
  template<> struct DefaultConstructible<XrdCl::StatInfo> : std::false_type { };
}

// Class generating the wrapper for type XrdCl::StatInfo
// signature to use in the veto file: XrdCl::StatInfo
struct JlXrdCl_StatInfo: public Wrapper {

  JlXrdCl_StatInfo(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type XrdCl::StatInfo (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:399:9
    jlcxx::TypeWrapper<XrdCl::StatInfo>  t = jlModule.add_type<XrdCl::StatInfo>("XrdCl!StatInfo");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<XrdCl::StatInfo>>(new jlcxx::TypeWrapper<XrdCl::StatInfo>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.method("delete", [](XrdCl::StatInfo* self){ delete self; });


    DEBUG_MSG("Adding wrapper for void XrdCl::StatInfo::StatInfo(const std::string &, uint64_t, uint32_t, uint64_t) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:426:7
    t.constructor<const std::string &, uint64_t, uint32_t, uint64_t>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void XrdCl::StatInfo::StatInfo(const XrdCl::StatInfo &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:432:7
    t.constructor<const XrdCl::StatInfo &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for const std::string & XrdCl::StatInfo::GetId() (" __HERE__ ")");
    // signature to use in the veto list: const std::string & XrdCl::StatInfo::GetId()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:442:26
    t.method("GetId", static_cast<const std::string & (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetId));

    DEBUG_MSG("Adding wrapper for uint64_t XrdCl::StatInfo::GetSize() (" __HERE__ ")");
    // signature to use in the veto list: uint64_t XrdCl::StatInfo::GetSize()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:447:16
    t.method("GetSize", static_cast<uint64_t (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetSize));

    DEBUG_MSG("Adding wrapper for void XrdCl::StatInfo::SetSize(uint64_t) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::StatInfo::SetSize(uint64_t)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:452:12
    t.method("SetSize", static_cast<void (XrdCl::StatInfo::*)(uint64_t) >(&XrdCl::StatInfo::SetSize));

    DEBUG_MSG("Adding wrapper for uint32_t XrdCl::StatInfo::GetFlags() (" __HERE__ ")");
    // signature to use in the veto list: uint32_t XrdCl::StatInfo::GetFlags()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:457:16
    t.method("GetFlags", static_cast<uint32_t (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetFlags));

    DEBUG_MSG("Adding wrapper for void XrdCl::StatInfo::SetFlags(uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::StatInfo::SetFlags(uint32_t)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:462:12
    t.method("SetFlags", static_cast<void (XrdCl::StatInfo::*)(uint32_t) >(&XrdCl::StatInfo::SetFlags));

    DEBUG_MSG("Adding wrapper for bool XrdCl::StatInfo::TestFlags(uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: bool XrdCl::StatInfo::TestFlags(uint32_t)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:467:12
    t.method("TestFlags", static_cast<bool (XrdCl::StatInfo::*)(uint32_t)  const>(&XrdCl::StatInfo::TestFlags));

    DEBUG_MSG("Adding wrapper for uint64_t XrdCl::StatInfo::GetModTime() (" __HERE__ ")");
    // signature to use in the veto list: uint64_t XrdCl::StatInfo::GetModTime()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:472:16
    t.method("GetModTime", static_cast<uint64_t (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetModTime));

    DEBUG_MSG("Adding wrapper for std::string XrdCl::StatInfo::GetModTimeAsString() (" __HERE__ ")");
    // signature to use in the veto list: std::string XrdCl::StatInfo::GetModTimeAsString()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:477:19
    t.method("GetModTimeAsString", static_cast<std::string (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetModTimeAsString));

    DEBUG_MSG("Adding wrapper for uint64_t XrdCl::StatInfo::GetChangeTime() (" __HERE__ ")");
    // signature to use in the veto list: uint64_t XrdCl::StatInfo::GetChangeTime()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:482:16
    t.method("GetChangeTime", static_cast<uint64_t (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetChangeTime));

    DEBUG_MSG("Adding wrapper for std::string XrdCl::StatInfo::GetChangeTimeAsString() (" __HERE__ ")");
    // signature to use in the veto list: std::string XrdCl::StatInfo::GetChangeTimeAsString()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:487:19
    t.method("GetChangeTimeAsString", static_cast<std::string (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetChangeTimeAsString));

    DEBUG_MSG("Adding wrapper for uint64_t XrdCl::StatInfo::GetAccessTime() (" __HERE__ ")");
    // signature to use in the veto list: uint64_t XrdCl::StatInfo::GetAccessTime()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:492:16
    t.method("GetAccessTime", static_cast<uint64_t (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetAccessTime));

    DEBUG_MSG("Adding wrapper for std::string XrdCl::StatInfo::GetAccessTimeAsString() (" __HERE__ ")");
    // signature to use in the veto list: std::string XrdCl::StatInfo::GetAccessTimeAsString()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:497:19
    t.method("GetAccessTimeAsString", static_cast<std::string (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetAccessTimeAsString));

    DEBUG_MSG("Adding wrapper for const std::string & XrdCl::StatInfo::GetModeAsString() (" __HERE__ ")");
    // signature to use in the veto list: const std::string & XrdCl::StatInfo::GetModeAsString()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:502:26
    t.method("GetModeAsString", static_cast<const std::string & (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetModeAsString));

    DEBUG_MSG("Adding wrapper for const std::string XrdCl::StatInfo::GetModeAsOctString() (" __HERE__ ")");
    // signature to use in the veto list: const std::string XrdCl::StatInfo::GetModeAsOctString()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:507:25
    t.method("GetModeAsOctString", static_cast<const std::string (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetModeAsOctString));

    DEBUG_MSG("Adding wrapper for const std::string & XrdCl::StatInfo::GetOwner() (" __HERE__ ")");
    // signature to use in the veto list: const std::string & XrdCl::StatInfo::GetOwner()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:512:26
    t.method("GetOwner", static_cast<const std::string & (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetOwner));

    DEBUG_MSG("Adding wrapper for const std::string & XrdCl::StatInfo::GetGroup() (" __HERE__ ")");
    // signature to use in the veto list: const std::string & XrdCl::StatInfo::GetGroup()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:517:26
    t.method("GetGroup", static_cast<const std::string & (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetGroup));

    DEBUG_MSG("Adding wrapper for const std::string & XrdCl::StatInfo::GetChecksum() (" __HERE__ ")");
    // signature to use in the veto list: const std::string & XrdCl::StatInfo::GetChecksum()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:522:26
    t.method("GetChecksum", static_cast<const std::string & (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::GetChecksum));

    DEBUG_MSG("Adding wrapper for bool XrdCl::StatInfo::ParseServerResponse(const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool XrdCl::StatInfo::ParseServerResponse(const char *)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:527:12
    t.method("ParseServerResponse", static_cast<bool (XrdCl::StatInfo::*)(const char *) >(&XrdCl::StatInfo::ParseServerResponse));

    DEBUG_MSG("Adding wrapper for bool XrdCl::StatInfo::ExtendedFormat() (" __HERE__ ")");
    // signature to use in the veto list: bool XrdCl::StatInfo::ExtendedFormat()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:532:12
    t.method("ExtendedFormat", static_cast<bool (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::ExtendedFormat));

    DEBUG_MSG("Adding wrapper for bool XrdCl::StatInfo::HasChecksum() (" __HERE__ ")");
    // signature to use in the veto list: bool XrdCl::StatInfo::HasChecksum()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:537:12
    t.method("HasChecksum", static_cast<bool (XrdCl::StatInfo::*)()  const>(&XrdCl::StatInfo::HasChecksum));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<XrdCl::StatInfo>> type_;
};
std::shared_ptr<Wrapper> newJlXrdCl_StatInfo(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlXrdCl_StatInfo(module));
}
