// this file was auto-generated by wrapit 5168a24
#include "Wrapper.h"

#include "jlXRootD.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<XrdCl::StatInfoVFS> : std::false_type { };
  template<> struct DefaultConstructible<XrdCl::StatInfoVFS> : std::false_type { };
}

// Class generating the wrapper for type XrdCl::StatInfoVFS
// signature to use in the veto file: XrdCl::StatInfoVFS
struct JlXrdCl_StatInfoVFS: public Wrapper {

  JlXrdCl_StatInfoVFS(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type XrdCl::StatInfoVFS (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:572:9
    jlcxx::TypeWrapper<XrdCl::StatInfoVFS>  t = jlModule.add_type<XrdCl::StatInfoVFS>("XrdCl!StatInfoVFS");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<XrdCl::StatInfoVFS>>(new jlcxx::TypeWrapper<XrdCl::StatInfoVFS>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for uint64_t XrdCl::StatInfoVFS::GetNodesRW() (" __HERE__ ")");
    // signature to use in the veto list: uint64_t XrdCl::StatInfoVFS::GetNodesRW()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:583:16
    t.method("GetNodesRW", static_cast<uint64_t (XrdCl::StatInfoVFS::*)()  const>(&XrdCl::StatInfoVFS::GetNodesRW));

    DEBUG_MSG("Adding wrapper for uint64_t XrdCl::StatInfoVFS::GetFreeRW() (" __HERE__ ")");
    // signature to use in the veto list: uint64_t XrdCl::StatInfoVFS::GetFreeRW()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:591:16
    t.method("GetFreeRW", static_cast<uint64_t (XrdCl::StatInfoVFS::*)()  const>(&XrdCl::StatInfoVFS::GetFreeRW));

    DEBUG_MSG("Adding wrapper for uint8_t XrdCl::StatInfoVFS::GetUtilizationRW() (" __HERE__ ")");
    // signature to use in the veto list: uint8_t XrdCl::StatInfoVFS::GetUtilizationRW()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:599:15
    t.method("GetUtilizationRW", static_cast<uint8_t (XrdCl::StatInfoVFS::*)()  const>(&XrdCl::StatInfoVFS::GetUtilizationRW));

    DEBUG_MSG("Adding wrapper for uint64_t XrdCl::StatInfoVFS::GetNodesStaging() (" __HERE__ ")");
    // signature to use in the veto list: uint64_t XrdCl::StatInfoVFS::GetNodesStaging()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:607:16
    t.method("GetNodesStaging", static_cast<uint64_t (XrdCl::StatInfoVFS::*)()  const>(&XrdCl::StatInfoVFS::GetNodesStaging));

    DEBUG_MSG("Adding wrapper for uint64_t XrdCl::StatInfoVFS::GetFreeStaging() (" __HERE__ ")");
    // signature to use in the veto list: uint64_t XrdCl::StatInfoVFS::GetFreeStaging()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:615:16
    t.method("GetFreeStaging", static_cast<uint64_t (XrdCl::StatInfoVFS::*)()  const>(&XrdCl::StatInfoVFS::GetFreeStaging));

    DEBUG_MSG("Adding wrapper for uint8_t XrdCl::StatInfoVFS::GetUtilizationStaging() (" __HERE__ ")");
    // signature to use in the veto list: uint8_t XrdCl::StatInfoVFS::GetUtilizationStaging()
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:623:15
    t.method("GetUtilizationStaging", static_cast<uint8_t (XrdCl::StatInfoVFS::*)()  const>(&XrdCl::StatInfoVFS::GetUtilizationStaging));

    DEBUG_MSG("Adding wrapper for bool XrdCl::StatInfoVFS::ParseServerResponse(const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool XrdCl::StatInfoVFS::ParseServerResponse(const char *)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClXRootDResponses.hh:631:12
    t.method("ParseServerResponse", static_cast<bool (XrdCl::StatInfoVFS::*)(const char *) >(&XrdCl::StatInfoVFS::ParseServerResponse));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<XrdCl::StatInfoVFS>> type_;
};
std::shared_ptr<Wrapper> newJlXrdCl_StatInfoVFS(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlXrdCl_StatInfoVFS(module));
}
