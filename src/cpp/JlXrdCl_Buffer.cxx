// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlXRootD.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<XrdCl::Buffer> : std::false_type { };
  template<> struct DefaultConstructible<XrdCl::Buffer> : std::false_type { };
}

// Class generating the wrapper for type XrdCl::Buffer
// signature to use in the veto file: XrdCl::Buffer
struct JlXrdCl_Buffer: public Wrapper {

  JlXrdCl_Buffer(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type XrdCl::Buffer (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:33:9
    jlcxx::TypeWrapper<XrdCl::Buffer>  t = jlModule.add_type<XrdCl::Buffer>("XrdCl!Buffer");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<XrdCl::Buffer>>(new jlcxx::TypeWrapper<XrdCl::Buffer>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
    t.method("delete", [](XrdCl::Buffer* self){ delete self; });


    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::Buffer(uint32_t) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:39:7
    t.constructor<uint32_t>(/*finalize=*/true);



    DEBUG_MSG("Adding wrapper for const char * XrdCl::Buffer::GetBuffer(uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: const char * XrdCl::Buffer::GetBuffer(uint32_t)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:72:19
    t.method("GetBuffer", [](XrdCl::Buffer const& a) { return (std::string)a.GetBuffer(); });
    t.method("GetBuffer", [](XrdCl::Buffer const& a, uint32_t arg0) { return (std::string)a.GetBuffer(arg0); });
    t.method("GetBuffer", [](XrdCl::Buffer const* a) { return (std::string)a->GetBuffer(); });
    t.method("GetBuffer", [](XrdCl::Buffer const* a, uint32_t arg0) { return (std::string)a->GetBuffer(arg0); });

    DEBUG_MSG("Adding wrapper for char * XrdCl::Buffer::GetBuffer(uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: char * XrdCl::Buffer::GetBuffer(uint32_t)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:80:13
    t.method("GetBuffer", static_cast<char * (XrdCl::Buffer::*)(uint32_t) >(&XrdCl::Buffer::GetBuffer));
    t.method("GetBuffer", [](XrdCl::Buffer& a)->char * { return a.GetBuffer(); });
    t.method("GetBuffer", [](XrdCl::Buffer* a)->char * { return a->GetBuffer(); });

    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::ReAllocate(uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::Buffer::ReAllocate(uint32_t)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:88:12
    t.method("ReAllocate", static_cast<void (XrdCl::Buffer::*)(uint32_t) >(&XrdCl::Buffer::ReAllocate));

    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::Free() (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::Buffer::Free()
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:99:12
    t.method("Free", static_cast<void (XrdCl::Buffer::*)() >(&XrdCl::Buffer::Free));

    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::Allocate(uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::Buffer::Allocate(uint32_t)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:110:12
    t.method("Allocate", static_cast<void (XrdCl::Buffer::*)(uint32_t) >(&XrdCl::Buffer::Allocate));

    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::Zero() (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::Buffer::Zero()
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:124:12
    t.method("Zero", static_cast<void (XrdCl::Buffer::*)() >(&XrdCl::Buffer::Zero));

    DEBUG_MSG("Adding wrapper for uint32_t XrdCl::Buffer::GetSize() (" __HERE__ ")");
    // signature to use in the veto list: uint32_t XrdCl::Buffer::GetSize()
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:132:16
    t.method("GetSize", static_cast<uint32_t (XrdCl::Buffer::*)()  const>(&XrdCl::Buffer::GetSize));

    DEBUG_MSG("Adding wrapper for uint32_t XrdCl::Buffer::GetCursor() (" __HERE__ ")");
    // signature to use in the veto list: uint32_t XrdCl::Buffer::GetCursor()
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:140:16
    t.method("GetCursor", static_cast<uint32_t (XrdCl::Buffer::*)()  const>(&XrdCl::Buffer::GetCursor));

    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::SetCursor(uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::Buffer::SetCursor(uint32_t)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:148:12
    t.method("SetCursor", static_cast<void (XrdCl::Buffer::*)(uint32_t) >(&XrdCl::Buffer::SetCursor));

    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::AdvanceCursor(uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::Buffer::AdvanceCursor(uint32_t)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:156:12
    t.method("AdvanceCursor", static_cast<void (XrdCl::Buffer::*)(uint32_t) >(&XrdCl::Buffer::AdvanceCursor));

    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::Append(const char *, uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::Buffer::Append(const char *, uint32_t)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:164:12
    t.method("Append", static_cast<void (XrdCl::Buffer::*)(const char *, uint32_t) >(&XrdCl::Buffer::Append));

    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::Append(const char *, uint32_t, uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::Buffer::Append(const char *, uint32_t, uint32_t)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:177:12
    t.method("Append", static_cast<void (XrdCl::Buffer::*)(const char *, uint32_t, uint32_t) >(&XrdCl::Buffer::Append));

    DEBUG_MSG("Adding wrapper for char * XrdCl::Buffer::GetBufferAtCursor() (" __HERE__ ")");
    // signature to use in the veto list: char * XrdCl::Buffer::GetBufferAtCursor()
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:189:13
    t.method("GetBufferAtCursor", static_cast<char * (XrdCl::Buffer::*)() >(&XrdCl::Buffer::GetBufferAtCursor));

    DEBUG_MSG("Adding wrapper for const char * XrdCl::Buffer::GetBufferAtCursor() (" __HERE__ ")");
    // signature to use in the veto list: const char * XrdCl::Buffer::GetBufferAtCursor()
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:197:19
    t.method("GetBufferAtCursor", [](XrdCl::Buffer const& a) { return (std::string)a.GetBufferAtCursor(); });
    t.method("GetBufferAtCursor", [](XrdCl::Buffer const* a) { return (std::string)a->GetBufferAtCursor(); });

    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::FromString(const std::string) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::Buffer::FromString(const std::string)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:205:12
    t.method("FromString", static_cast<void (XrdCl::Buffer::*)(const std::string) >(&XrdCl::Buffer::FromString));

    DEBUG_MSG("Adding wrapper for std::string XrdCl::Buffer::ToString() (" __HERE__ ")");
    // signature to use in the veto list: std::string XrdCl::Buffer::ToString()
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:215:19
    t.method("ToString", static_cast<std::string (XrdCl::Buffer::*)()  const>(&XrdCl::Buffer::ToString));

    DEBUG_MSG("Adding wrapper for void XrdCl::Buffer::Grab(char *, uint32_t) (" __HERE__ ")");
    // signature to use in the veto list: void XrdCl::Buffer::Grab(char *, uint32_t)
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:228:12
    t.method("Grab", static_cast<void (XrdCl::Buffer::*)(char *, uint32_t) >(&XrdCl::Buffer::Grab));

    DEBUG_MSG("Adding wrapper for char * XrdCl::Buffer::Release() (" __HERE__ ")");
    // signature to use in the veto list: char * XrdCl::Buffer::Release()
    // defined in /Users/mato/.julia/artifacts/d6b4bfcd1db9f33711a4c083d9d997b32d266141/include/xrootd/XrdCl/XrdClBuffer.hh:238:13
    t.method("Release", static_cast<char * (XrdCl::Buffer::*)() >(&XrdCl::Buffer::Release));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<XrdCl::Buffer>> type_;
};
std::shared_ptr<Wrapper> newJlXrdCl_Buffer(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlXrdCl_Buffer(module));
}
