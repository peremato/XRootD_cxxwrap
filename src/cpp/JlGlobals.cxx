// this file was auto-generated by wrapit 5168a24
#include "Wrapper.h"

#include "jlXRootD.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"
// Class generating the wrapper for type 
// signature to use in the veto file: 
struct JlGlobal: public Wrapper {

  JlGlobal(jlcxx::Module& jlModule): Wrapper(jlModule){
  }

  void add_methods() const{
    auto& t = module_;

    DEBUG_MSG("Adding wrapper for void Set(XrdCl::PropertyList &, const std::string &, const std::string &) (" __HERE__ ")");
    // signature to use in the veto list: void Set(XrdCl::PropertyList &, const std::string &, const std::string &)
    // defined in ./cpp/XRootDWrap.h:3:13
    t.method("Set", static_cast<void (*)(XrdCl::PropertyList &, const std::string &, const std::string &) >(&Set));

    DEBUG_MSG("Adding wrapper for XrdCl::OpenFlags::Flags & XrdCl::operator|=(XrdCl::OpenFlags::Flags &, const XrdCl::OpenFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::OpenFlags::Flags & XrdCl::operator|=(XrdCl::OpenFlags::Flags &, const XrdCl::OpenFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:111:3
    t.method("or!", static_cast<XrdCl::OpenFlags::Flags & (*)(XrdCl::OpenFlags::Flags &, const XrdCl::OpenFlags::Flags) >(&XrdCl::operator|=));

    DEBUG_MSG("Adding wrapper for XrdCl::OpenFlags::Flags & XrdCl::operator&=(XrdCl::OpenFlags::Flags &, const XrdCl::OpenFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::OpenFlags::Flags & XrdCl::operator&=(XrdCl::OpenFlags::Flags &, const XrdCl::OpenFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:111:3
    t.method("and!", static_cast<XrdCl::OpenFlags::Flags & (*)(XrdCl::OpenFlags::Flags &, const XrdCl::OpenFlags::Flags) >(&XrdCl::operator&=));

    DEBUG_MSG("Adding wrapper for XrdCl::OpenFlags::Flags & XrdCl::operator^=(XrdCl::OpenFlags::Flags &, const XrdCl::OpenFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::OpenFlags::Flags & XrdCl::operator^=(XrdCl::OpenFlags::Flags &, const XrdCl::OpenFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:111:3
    t.method("xor!", static_cast<XrdCl::OpenFlags::Flags & (*)(XrdCl::OpenFlags::Flags &, const XrdCl::OpenFlags::Flags) >(&XrdCl::operator^=));

    DEBUG_MSG("Adding wrapper for XrdCl::Access::Mode & XrdCl::operator|=(XrdCl::Access::Mode &, const XrdCl::Access::Mode) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::Access::Mode & XrdCl::operator|=(XrdCl::Access::Mode &, const XrdCl::Access::Mode)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:135:3
    t.method("or!", static_cast<XrdCl::Access::Mode & (*)(XrdCl::Access::Mode &, const XrdCl::Access::Mode) >(&XrdCl::operator|=));

    DEBUG_MSG("Adding wrapper for XrdCl::Access::Mode & XrdCl::operator&=(XrdCl::Access::Mode &, const XrdCl::Access::Mode) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::Access::Mode & XrdCl::operator&=(XrdCl::Access::Mode &, const XrdCl::Access::Mode)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:135:3
    t.method("and!", static_cast<XrdCl::Access::Mode & (*)(XrdCl::Access::Mode &, const XrdCl::Access::Mode) >(&XrdCl::operator&=));

    DEBUG_MSG("Adding wrapper for XrdCl::Access::Mode & XrdCl::operator^=(XrdCl::Access::Mode &, const XrdCl::Access::Mode) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::Access::Mode & XrdCl::operator^=(XrdCl::Access::Mode &, const XrdCl::Access::Mode)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:135:3
    t.method("xor!", static_cast<XrdCl::Access::Mode & (*)(XrdCl::Access::Mode &, const XrdCl::Access::Mode) >(&XrdCl::operator^=));

    DEBUG_MSG("Adding wrapper for XrdCl::MkDirFlags::Flags & XrdCl::operator|=(XrdCl::MkDirFlags::Flags &, const XrdCl::MkDirFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::MkDirFlags::Flags & XrdCl::operator|=(XrdCl::MkDirFlags::Flags &, const XrdCl::MkDirFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:148:3
    t.method("or!", static_cast<XrdCl::MkDirFlags::Flags & (*)(XrdCl::MkDirFlags::Flags &, const XrdCl::MkDirFlags::Flags) >(&XrdCl::operator|=));

    DEBUG_MSG("Adding wrapper for XrdCl::MkDirFlags::Flags & XrdCl::operator&=(XrdCl::MkDirFlags::Flags &, const XrdCl::MkDirFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::MkDirFlags::Flags & XrdCl::operator&=(XrdCl::MkDirFlags::Flags &, const XrdCl::MkDirFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:148:3
    t.method("and!", static_cast<XrdCl::MkDirFlags::Flags & (*)(XrdCl::MkDirFlags::Flags &, const XrdCl::MkDirFlags::Flags) >(&XrdCl::operator&=));

    DEBUG_MSG("Adding wrapper for XrdCl::MkDirFlags::Flags & XrdCl::operator^=(XrdCl::MkDirFlags::Flags &, const XrdCl::MkDirFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::MkDirFlags::Flags & XrdCl::operator^=(XrdCl::MkDirFlags::Flags &, const XrdCl::MkDirFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:148:3
    t.method("xor!", static_cast<XrdCl::MkDirFlags::Flags & (*)(XrdCl::MkDirFlags::Flags &, const XrdCl::MkDirFlags::Flags) >(&XrdCl::operator^=));

    DEBUG_MSG("Adding wrapper for XrdCl::DirListFlags::Flags & XrdCl::operator|=(XrdCl::DirListFlags::Flags &, const XrdCl::DirListFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::DirListFlags::Flags & XrdCl::operator|=(XrdCl::DirListFlags::Flags &, const XrdCl::DirListFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:168:3
    t.method("or!", static_cast<XrdCl::DirListFlags::Flags & (*)(XrdCl::DirListFlags::Flags &, const XrdCl::DirListFlags::Flags) >(&XrdCl::operator|=));

    DEBUG_MSG("Adding wrapper for XrdCl::DirListFlags::Flags & XrdCl::operator&=(XrdCl::DirListFlags::Flags &, const XrdCl::DirListFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::DirListFlags::Flags & XrdCl::operator&=(XrdCl::DirListFlags::Flags &, const XrdCl::DirListFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:168:3
    t.method("and!", static_cast<XrdCl::DirListFlags::Flags & (*)(XrdCl::DirListFlags::Flags &, const XrdCl::DirListFlags::Flags) >(&XrdCl::operator&=));

    DEBUG_MSG("Adding wrapper for XrdCl::DirListFlags::Flags & XrdCl::operator^=(XrdCl::DirListFlags::Flags &, const XrdCl::DirListFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::DirListFlags::Flags & XrdCl::operator^=(XrdCl::DirListFlags::Flags &, const XrdCl::DirListFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:168:3
    t.method("xor!", static_cast<XrdCl::DirListFlags::Flags & (*)(XrdCl::DirListFlags::Flags &, const XrdCl::DirListFlags::Flags) >(&XrdCl::operator^=));

    DEBUG_MSG("Adding wrapper for XrdCl::PrepareFlags::Flags & XrdCl::operator|=(XrdCl::PrepareFlags::Flags &, const XrdCl::PrepareFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::PrepareFlags::Flags & XrdCl::operator|=(XrdCl::PrepareFlags::Flags &, const XrdCl::PrepareFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:192:3
    t.method("or!", static_cast<XrdCl::PrepareFlags::Flags & (*)(XrdCl::PrepareFlags::Flags &, const XrdCl::PrepareFlags::Flags) >(&XrdCl::operator|=));

    DEBUG_MSG("Adding wrapper for XrdCl::PrepareFlags::Flags & XrdCl::operator&=(XrdCl::PrepareFlags::Flags &, const XrdCl::PrepareFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::PrepareFlags::Flags & XrdCl::operator&=(XrdCl::PrepareFlags::Flags &, const XrdCl::PrepareFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:192:3
    t.method("and!", static_cast<XrdCl::PrepareFlags::Flags & (*)(XrdCl::PrepareFlags::Flags &, const XrdCl::PrepareFlags::Flags) >(&XrdCl::operator&=));

    DEBUG_MSG("Adding wrapper for XrdCl::PrepareFlags::Flags & XrdCl::operator^=(XrdCl::PrepareFlags::Flags &, const XrdCl::PrepareFlags::Flags) (" __HERE__ ")");
    // signature to use in the veto list: XrdCl::PrepareFlags::Flags & XrdCl::operator^=(XrdCl::PrepareFlags::Flags &, const XrdCl::PrepareFlags::Flags)
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClFileSystem.hh:192:3
    t.method("xor!", static_cast<XrdCl::PrepareFlags::Flags & (*)(XrdCl::PrepareFlags::Flags &, const XrdCl::PrepareFlags::Flags) >(&XrdCl::operator^=));

    DEBUG_MSG("Adding XrdCl!stOK methods to provide access to the global variable XrdCl::stOK (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:31:18
    t.method("XrdCl!stOK", []()-> uint16_t { return XrdCl::stOK; });

    DEBUG_MSG("Adding XrdCl!stError methods to provide access to the global variable XrdCl::stError (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:32:18
    t.method("XrdCl!stError", []()-> uint16_t { return XrdCl::stError; });

    DEBUG_MSG("Adding XrdCl!stFatal methods to provide access to the global variable XrdCl::stFatal (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:33:18
    t.method("XrdCl!stFatal", []()-> uint16_t { return XrdCl::stFatal; });

    DEBUG_MSG("Adding XrdCl!suDone methods to provide access to the global variable XrdCl::suDone (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:38:18
    t.method("XrdCl!suDone", []()-> uint16_t { return XrdCl::suDone; });

    DEBUG_MSG("Adding XrdCl!suContinue methods to provide access to the global variable XrdCl::suContinue (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:39:18
    t.method("XrdCl!suContinue", []()-> uint16_t { return XrdCl::suContinue; });

    DEBUG_MSG("Adding XrdCl!suRetry methods to provide access to the global variable XrdCl::suRetry (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:40:18
    t.method("XrdCl!suRetry", []()-> uint16_t { return XrdCl::suRetry; });

    DEBUG_MSG("Adding XrdCl!suPartial methods to provide access to the global variable XrdCl::suPartial (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:41:18
    t.method("XrdCl!suPartial", []()-> uint16_t { return XrdCl::suPartial; });

    DEBUG_MSG("Adding XrdCl!suAlreadyDone methods to provide access to the global variable XrdCl::suAlreadyDone (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:42:18
    t.method("XrdCl!suAlreadyDone", []()-> uint16_t { return XrdCl::suAlreadyDone; });

    DEBUG_MSG("Adding XrdCl!suNotStarted methods to provide access to the global variable XrdCl::suNotStarted (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:43:18
    t.method("XrdCl!suNotStarted", []()-> uint16_t { return XrdCl::suNotStarted; });

    DEBUG_MSG("Adding XrdCl!errNone methods to provide access to the global variable XrdCl::errNone (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:48:18
    t.method("XrdCl!errNone", []()-> uint16_t { return XrdCl::errNone; });

    DEBUG_MSG("Adding XrdCl!errRetry methods to provide access to the global variable XrdCl::errRetry (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:49:18
    t.method("XrdCl!errRetry", []()-> uint16_t { return XrdCl::errRetry; });

    DEBUG_MSG("Adding XrdCl!errUnknown methods to provide access to the global variable XrdCl::errUnknown (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:50:18
    t.method("XrdCl!errUnknown", []()-> uint16_t { return XrdCl::errUnknown; });

    DEBUG_MSG("Adding XrdCl!errInvalidOp methods to provide access to the global variable XrdCl::errInvalidOp (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:51:18
    t.method("XrdCl!errInvalidOp", []()-> uint16_t { return XrdCl::errInvalidOp; });

    DEBUG_MSG("Adding XrdCl!errFcntl methods to provide access to the global variable XrdCl::errFcntl (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:53:18
    t.method("XrdCl!errFcntl", []()-> uint16_t { return XrdCl::errFcntl; });

    DEBUG_MSG("Adding XrdCl!errPoll methods to provide access to the global variable XrdCl::errPoll (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:54:18
    t.method("XrdCl!errPoll", []()-> uint16_t { return XrdCl::errPoll; });

    DEBUG_MSG("Adding XrdCl!errConfig methods to provide access to the global variable XrdCl::errConfig (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:55:18
    t.method("XrdCl!errConfig", []()-> uint16_t { return XrdCl::errConfig; });

    DEBUG_MSG("Adding XrdCl!errInternal methods to provide access to the global variable XrdCl::errInternal (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:56:18
    t.method("XrdCl!errInternal", []()-> uint16_t { return XrdCl::errInternal; });

    DEBUG_MSG("Adding XrdCl!errUnknownCommand methods to provide access to the global variable XrdCl::errUnknownCommand (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:57:18
    t.method("XrdCl!errUnknownCommand", []()-> uint16_t { return XrdCl::errUnknownCommand; });

    DEBUG_MSG("Adding XrdCl!errInvalidArgs methods to provide access to the global variable XrdCl::errInvalidArgs (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:58:18
    t.method("XrdCl!errInvalidArgs", []()-> uint16_t { return XrdCl::errInvalidArgs; });

    DEBUG_MSG("Adding XrdCl!errInProgress methods to provide access to the global variable XrdCl::errInProgress (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:59:18
    t.method("XrdCl!errInProgress", []()-> uint16_t { return XrdCl::errInProgress; });

    DEBUG_MSG("Adding XrdCl!errUninitialized methods to provide access to the global variable XrdCl::errUninitialized (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:60:18
    t.method("XrdCl!errUninitialized", []()-> uint16_t { return XrdCl::errUninitialized; });

    DEBUG_MSG("Adding XrdCl!errOSError methods to provide access to the global variable XrdCl::errOSError (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:61:18
    t.method("XrdCl!errOSError", []()-> uint16_t { return XrdCl::errOSError; });

    DEBUG_MSG("Adding XrdCl!errNotSupported methods to provide access to the global variable XrdCl::errNotSupported (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:62:18
    t.method("XrdCl!errNotSupported", []()-> uint16_t { return XrdCl::errNotSupported; });

    DEBUG_MSG("Adding XrdCl!errDataError methods to provide access to the global variable XrdCl::errDataError (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:63:18
    t.method("XrdCl!errDataError", []()-> uint16_t { return XrdCl::errDataError; });

    DEBUG_MSG("Adding XrdCl!errNotImplemented methods to provide access to the global variable XrdCl::errNotImplemented (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:64:18
    t.method("XrdCl!errNotImplemented", []()-> uint16_t { return XrdCl::errNotImplemented; });

    DEBUG_MSG("Adding XrdCl!errNoMoreReplicas methods to provide access to the global variable XrdCl::errNoMoreReplicas (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:65:18
    t.method("XrdCl!errNoMoreReplicas", []()-> uint16_t { return XrdCl::errNoMoreReplicas; });

    DEBUG_MSG("Adding XrdCl!errPipelineFailed methods to provide access to the global variable XrdCl::errPipelineFailed (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:66:18
    t.method("XrdCl!errPipelineFailed", []()-> uint16_t { return XrdCl::errPipelineFailed; });

    DEBUG_MSG("Adding XrdCl!errInvalidAddr methods to provide access to the global variable XrdCl::errInvalidAddr (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:71:18
    t.method("XrdCl!errInvalidAddr", []()-> uint16_t { return XrdCl::errInvalidAddr; });

    DEBUG_MSG("Adding XrdCl!errSocketError methods to provide access to the global variable XrdCl::errSocketError (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:72:18
    t.method("XrdCl!errSocketError", []()-> uint16_t { return XrdCl::errSocketError; });

    DEBUG_MSG("Adding XrdCl!errSocketTimeout methods to provide access to the global variable XrdCl::errSocketTimeout (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:73:18
    t.method("XrdCl!errSocketTimeout", []()-> uint16_t { return XrdCl::errSocketTimeout; });

    DEBUG_MSG("Adding XrdCl!errSocketDisconnected methods to provide access to the global variable XrdCl::errSocketDisconnected (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:74:18
    t.method("XrdCl!errSocketDisconnected", []()-> uint16_t { return XrdCl::errSocketDisconnected; });

    DEBUG_MSG("Adding XrdCl!errPollerError methods to provide access to the global variable XrdCl::errPollerError (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:75:18
    t.method("XrdCl!errPollerError", []()-> uint16_t { return XrdCl::errPollerError; });

    DEBUG_MSG("Adding XrdCl!errSocketOptError methods to provide access to the global variable XrdCl::errSocketOptError (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:76:18
    t.method("XrdCl!errSocketOptError", []()-> uint16_t { return XrdCl::errSocketOptError; });

    DEBUG_MSG("Adding XrdCl!errStreamDisconnect methods to provide access to the global variable XrdCl::errStreamDisconnect (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:77:18
    t.method("XrdCl!errStreamDisconnect", []()-> uint16_t { return XrdCl::errStreamDisconnect; });

    DEBUG_MSG("Adding XrdCl!errConnectionError methods to provide access to the global variable XrdCl::errConnectionError (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:78:18
    t.method("XrdCl!errConnectionError", []()-> uint16_t { return XrdCl::errConnectionError; });

    DEBUG_MSG("Adding XrdCl!errInvalidSession methods to provide access to the global variable XrdCl::errInvalidSession (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:79:18
    t.method("XrdCl!errInvalidSession", []()-> uint16_t { return XrdCl::errInvalidSession; });

    DEBUG_MSG("Adding XrdCl!errTlsError methods to provide access to the global variable XrdCl::errTlsError (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:80:18
    t.method("XrdCl!errTlsError", []()-> uint16_t { return XrdCl::errTlsError; });

    DEBUG_MSG("Adding XrdCl!errInvalidMessage methods to provide access to the global variable XrdCl::errInvalidMessage (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:85:18
    t.method("XrdCl!errInvalidMessage", []()-> uint16_t { return XrdCl::errInvalidMessage; });

    DEBUG_MSG("Adding XrdCl!errHandShakeFailed methods to provide access to the global variable XrdCl::errHandShakeFailed (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:86:18
    t.method("XrdCl!errHandShakeFailed", []()-> uint16_t { return XrdCl::errHandShakeFailed; });

    DEBUG_MSG("Adding XrdCl!errLoginFailed methods to provide access to the global variable XrdCl::errLoginFailed (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:87:18
    t.method("XrdCl!errLoginFailed", []()-> uint16_t { return XrdCl::errLoginFailed; });

    DEBUG_MSG("Adding XrdCl!errAuthFailed methods to provide access to the global variable XrdCl::errAuthFailed (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:88:18
    t.method("XrdCl!errAuthFailed", []()-> uint16_t { return XrdCl::errAuthFailed; });

    DEBUG_MSG("Adding XrdCl!errQueryNotSupported methods to provide access to the global variable XrdCl::errQueryNotSupported (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:89:18
    t.method("XrdCl!errQueryNotSupported", []()-> uint16_t { return XrdCl::errQueryNotSupported; });

    DEBUG_MSG("Adding XrdCl!errOperationExpired methods to provide access to the global variable XrdCl::errOperationExpired (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:90:18
    t.method("XrdCl!errOperationExpired", []()-> uint16_t { return XrdCl::errOperationExpired; });

    DEBUG_MSG("Adding XrdCl!errOperationInterrupted methods to provide access to the global variable XrdCl::errOperationInterrupted (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:91:18
    t.method("XrdCl!errOperationInterrupted", []()-> uint16_t { return XrdCl::errOperationInterrupted; });

    DEBUG_MSG("Adding XrdCl!errThresholdExceeded methods to provide access to the global variable XrdCl::errThresholdExceeded (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:92:18
    t.method("XrdCl!errThresholdExceeded", []()-> uint16_t { return XrdCl::errThresholdExceeded; });

    DEBUG_MSG("Adding XrdCl!errNoMoreFreeSIDs methods to provide access to the global variable XrdCl::errNoMoreFreeSIDs (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:97:18
    t.method("XrdCl!errNoMoreFreeSIDs", []()-> uint16_t { return XrdCl::errNoMoreFreeSIDs; });

    DEBUG_MSG("Adding XrdCl!errInvalidRedirectURL methods to provide access to the global variable XrdCl::errInvalidRedirectURL (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:98:18
    t.method("XrdCl!errInvalidRedirectURL", []()-> uint16_t { return XrdCl::errInvalidRedirectURL; });

    DEBUG_MSG("Adding XrdCl!errInvalidResponse methods to provide access to the global variable XrdCl::errInvalidResponse (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:99:18
    t.method("XrdCl!errInvalidResponse", []()-> uint16_t { return XrdCl::errInvalidResponse; });

    DEBUG_MSG("Adding XrdCl!errNotFound methods to provide access to the global variable XrdCl::errNotFound (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:100:18
    t.method("XrdCl!errNotFound", []()-> uint16_t { return XrdCl::errNotFound; });

    DEBUG_MSG("Adding XrdCl!errCheckSumError methods to provide access to the global variable XrdCl::errCheckSumError (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:101:18
    t.method("XrdCl!errCheckSumError", []()-> uint16_t { return XrdCl::errCheckSumError; });

    DEBUG_MSG("Adding XrdCl!errRedirectLimit methods to provide access to the global variable XrdCl::errRedirectLimit (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:102:18
    t.method("XrdCl!errRedirectLimit", []()-> uint16_t { return XrdCl::errRedirectLimit; });

    DEBUG_MSG("Adding XrdCl!errCorruptedHeader methods to provide access to the global variable XrdCl::errCorruptedHeader (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:103:18
    t.method("XrdCl!errCorruptedHeader", []()-> uint16_t { return XrdCl::errCorruptedHeader; });

    DEBUG_MSG("Adding XrdCl!errErrorResponse methods to provide access to the global variable XrdCl::errErrorResponse (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:105:18
    t.method("XrdCl!errErrorResponse", []()-> uint16_t { return XrdCl::errErrorResponse; });

    DEBUG_MSG("Adding XrdCl!errRedirect methods to provide access to the global variable XrdCl::errRedirect (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:106:18
    t.method("XrdCl!errRedirect", []()-> uint16_t { return XrdCl::errRedirect; });

    DEBUG_MSG("Adding XrdCl!errLocalError methods to provide access to the global variable XrdCl::errLocalError (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:107:18
    t.method("XrdCl!errLocalError", []()-> uint16_t { return XrdCl::errLocalError; });

    DEBUG_MSG("Adding XrdCl!errResponseNegative methods to provide access to the global variable XrdCl::errResponseNegative (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/8520a52585f5eadf78b58f2d486d1abb34f514f1/include/xrootd/XrdCl/XrdClStatus.hh:109:18
    t.method("XrdCl!errResponseNegative", []()-> uint16_t { return XrdCl::errResponseNegative; });
  }
};
std::shared_ptr<Wrapper> newJlGlobal(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlGlobal(module));
}
